//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employees", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class Employees : object
    {
        
        private System.DateTime DateOfBrithField;
        
        private int DepartmentIdField;
        
        private WcfServiceReference.Departments DepartmentsField;
        
        private string EmailField;
        
        private int EmployeeIdField;
        
        private string FirstNameField;
        
        private int GenderField;
        
        private string LastNameField;
        
        private string PhotoPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBrith
        {
            get
            {
                return this.DateOfBrithField;
            }
            set
            {
                this.DateOfBrithField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId
        {
            get
            {
                return this.DepartmentIdField;
            }
            set
            {
                this.DepartmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfServiceReference.Departments Departments
        {
            get
            {
                return this.DepartmentsField;
            }
            set
            {
                this.DepartmentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId
        {
            get
            {
                return this.EmployeeIdField;
            }
            set
            {
                this.EmployeeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                this.GenderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoPath
        {
            get
            {
                return this.PhotoPathField;
            }
            set
            {
                this.PhotoPathField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Departments", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    public partial class Departments : object
    {
        
        private int DepartmentIdField;
        
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId
        {
            get
            {
                return this.DepartmentIdField;
            }
            set
            {
                this.DepartmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IWCFService")]
    public interface IWCFService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetEmployees", ReplyAction="http://tempuri.org/IWCFService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Employees[]> GetEmployeesAsync(int departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetAllEmployees", ReplyAction="http://tempuri.org/IWCFService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Employees[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetEmployee", ReplyAction="http://tempuri.org/IWCFService/GetEmployeeResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Employees> GetEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Employees> UpdateEmployeeAsync(WcfServiceReference.Employees employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDepartments", ReplyAction="http://tempuri.org/IWCFService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Departments[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDepartment", ReplyAction="http://tempuri.org/IWCFService/GetDepartmentResponse")]
        System.Threading.Tasks.Task<WcfServiceReference.Departments> GetDepartmentAsync(int departmentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IWCFServiceChannel : WcfServiceReference.IWCFService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<WcfServiceReference.IWCFService>, WcfServiceReference.IWCFService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WCFServiceClient() : 
                base(WCFServiceClient.GetDefaultBinding(), WCFServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWCFService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(WCFServiceClient.GetBindingForEndpoint(endpointConfiguration), WCFServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WCFServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WCFServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Employees[]> GetEmployeesAsync(int departmentId)
        {
            return base.Channel.GetEmployeesAsync(departmentId);
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Employees[]> GetAllEmployeesAsync()
        {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Employees> GetEmployeeAsync(int employeeId)
        {
            return base.Channel.GetEmployeeAsync(employeeId);
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Employees> UpdateEmployeeAsync(WcfServiceReference.Employees employee)
        {
            return base.Channel.UpdateEmployeeAsync(employee);
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Departments[]> GetDepartmentsAsync()
        {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public System.Threading.Tasks.Task<WcfServiceReference.Departments> GetDepartmentAsync(int departmentId)
        {
            return base.Channel.GetDepartmentAsync(departmentId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWCFService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWCFService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:63875/WcfService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WCFServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWCFService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WCFServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWCFService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IWCFService,
        }
    }
}
